/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        
        if(list1 == NULL && list2 == NULL)  return NULL;
        else if(list1 == NULL)  return list2;
        else if(list2 == NULL)  return list1;
       
        ListNode* answer = list1;
        ListNode* headAns = answer;

        int size1 = 0, size2 = 0;

        while(answer->next != NULL)
        {
            answer = answer->next;
        }

        answer->next = list2;
        answer = headAns;

        while(list1->next != NULL && list2->next != NULL)
        {
            if(list1->val > list2->val) 
            {
                answer->val = list2->val;
                answer = answer->next;
                list2 = list2->next;
            }
            else
            {
                answer->val = list1->val;
                answer = answer->next;
                list1 = list1->next;
            }
        }

        if(list1->next == NULL) // list1 1개 남을 때
        {
            while(list2->next != NULL)
            {
                if(list1->val > list2->val)
                {
                    answer->val = list2->val;
                    answer = answer->next;
                    list2 = list2->next;
                }
                else
                {
                    answer->val = list1->val;
                    answer->next = list2;
                    break;
                }
            }

            if(list1->val > list2->val)
            {
                answer->val = list2->val;
                answer = answer->next;
                answer->val = list1->val;
            }
            else
            {
                answer->val = list1->val;
                answer = answer->next;
                answer->val = list2->val;
            }
        }
        else // list2 한개남을때
        {
            while(list1->next != NULL)
            {
                if(list2->val > list1->val)
                {
                    answer->val = list1->val;
                    answer = answer->next;
                    list1 = list1->next;
                }
                else
                {
                    answer->val = list2->val;
                    answer->next = list1;
                    break;
                }
            }

            if(list2->val > list1->val)
            {
                answer->val = list1->val;
                answer = answer->next;
                answer->val = list2->val;
            }
            else
            {
                answer->val = list2->val;
                answer = answer->next;
                answer->val = list1->val;
            }
        }


        return headAns;



    }
};
